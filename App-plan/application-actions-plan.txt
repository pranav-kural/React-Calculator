add number to the calc: addNumToCalc

add operator to calc: AddOpToCalc

add a dot symbol: addDotSymb

clear last input: clearLastInput

clear current calculation: clearCurrentCalc

calculate result: calcResult

updatePrevNum


------------------------------------------


addNumToCalc(numberClicked) ->

    (numberClicked === "0") 
        true->

        (state.symbOnDis === "0") 
            true ->
                do nothing
            
            false ->
                set state.num = state.num + numberClicked
                set state.symbOnDis = state.num
                        
                        
        false ->
            set state.num = state.num + numberClicked
            set state.symbOnDis = state.num 
            
------------------------------------------


addOpToCalc(operator) ->

    if (state.symbOnDis is a number) 
        true->

            if (calcOpSelected !== "none") ->
                        true ->
                            updatePrevNum()
                            
                        false ->
                            state.prevNum = state.num
                            
            setSymbOnDis(operator, "operator")
            state.calcOpSelected = operator
            set currentHis = [...state.currentHis, prevNum]
            set state.num = ""
            set state.dotPresentInNum = false
            
        false->
            
            setSymbOnDis(operator, "operator")
            state.calcOpSelected = operator
    
------------------------------------------

updatePrevNum() ->

    if (calcOpSelected !== "none") ->
    
        switch(calcOpSelected) -> 
        
            case "operator":
                // replace operator with condition for "add", "sub" etc.
                state.prevNum = state.prevNum (operator) state.num
                
------------------------------------------

addDotSymb() ->

    if state.dotPresentInNum !== true
        true ->
            set state.num = state.num + "."
            set state.symbOnDis = state.num
            set state.dotPresentInNum = true
            
------------------------------------------

clearLastInput() ->

    if state.symbOnDis === num
        true ->
            state.num.pop()
            if (state.num.length > 0) 
                true ->
                    state.symbOnDis = state.num
                fasle ->
                    charToSet = state.currentHis.pop()
                    state.symbOnDis = (charToSet === "") ? "0" ? charToSet;
                    
        fasle ->
            state.num = state.currentHis.pop()
            state.symbOnDis = state.num

------------------------------------------         
            
clearCurrentCalc() - 

    state.currentHis = [""]
    state.num = [""], state.symbOnDis = ["0"]
    state.prevNum = [""]
    state.dotPresentInNum = false
    
------------------------------------------

calcResult() - 

    if (sod != num) {
        return prevNum
    } else {
    
        
    }
    
    
    